[{"/home/bishop/School/Exercises/react-jokes-classes/src/index.js":"1","/home/bishop/School/Exercises/react-jokes-classes/src/App.js":"2","/home/bishop/School/Exercises/react-jokes-classes/src/registerServiceWorker.js":"3","/home/bishop/School/Exercises/react-jokes-classes/src/JokeList.js":"4","/home/bishop/School/Exercises/react-jokes-classes/src/Joke.js":"5"},{"size":340,"mtime":1696933539011,"results":"6","hashOfConfig":"7"},{"size":156,"mtime":1696934313875,"results":"8","hashOfConfig":"7"},{"size":4384,"mtime":1696933539031,"results":"9","hashOfConfig":"7"},{"size":2104,"mtime":1696935519695,"results":"10","hashOfConfig":"7"},{"size":468,"mtime":1696934313875,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4sk5z3",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/bishop/School/Exercises/react-jokes-classes/src/index.js",[],[],"/home/bishop/School/Exercises/react-jokes-classes/src/App.js",[],[],"/home/bishop/School/Exercises/react-jokes-classes/src/registerServiceWorker.js",[],[],"/home/bishop/School/Exercises/react-jokes-classes/src/JokeList.js",["28"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Joke from './Joke';\nimport './JokeList.css';\n\nconst JokeList = ({ numJokesToGet = 5 }) => {\n  // State for storing jokes and loading status\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Function to fetch jokes from the API\n  const getJokes = async () => {\n    try {\n      let jokes = [];\n      let seenJokes = new Set();\n\n      while (jokes.length < numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: { Accept: \"application/json\" }\n        });\n        let { ...joke } = res.data;\n\n        if (!seenJokes.has(joke.id)) {\n          seenJokes.add(joke.id);\n          jokes.push({ ...joke, votes: 0 });\n        } else {\n          console.log(\"duplicate found!\");\n        }\n      }\n\n      setJokes(jokes);\n      setIsLoading(false);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Function to generate new jokes\n  const generateNewJokes = () => {\n    setIsLoading(true);\n    getJokes();\n  };\n\n  // Function to handle votes\n  const vote = (id, delta) => {\n    setJokes(jokes => (\n      jokes.map(j =>\n        j.id === id ? { ...j, votes: j.votes + delta } : j\n      )\n    ));\n  };\n\n  // Effect to fetch jokes on component mount\n  useEffect(() => {\n    getJokes();\n  }, []);\n\n  // Sort jokes based on votes\n  let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n\n  // Render loading spinner or jokes list based on loading status\n  return (\n    isLoading ? (\n      <div className=\"loading\">\n        <i className=\"fas fa-4x fa-spinner fa-spin\" />\n      </div>\n    ) : (\n      <div className=\"JokeList\">\n        <button\n          className=\"JokeList-getmore\"\n          onClick={generateNewJokes}\n        >\n          Get New Jokes\n        </button>\n\n        {sortedJokes.map(j => (\n          <Joke\n            text={j.joke}\n            key={j.id}\n            id={j.id}\n            votes={j.votes}\n            vote={vote}\n          />\n        ))}\n      </div>\n    )\n  );\n};\n\nexport default JokeList;","/home/bishop/School/Exercises/react-jokes-classes/src/Joke.js",[],[],{"ruleId":"29","severity":1,"message":"30","line":56,"column":6,"nodeType":"31","endLine":56,"endColumn":8,"suggestions":"32"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getJokes'. Either include it or remove the dependency array.","ArrayExpression",["33"],{"desc":"34","fix":"35"},"Update the dependencies array to be: [getJokes]",{"range":"36","text":"37"},[1369,1371],"[getJokes]"]