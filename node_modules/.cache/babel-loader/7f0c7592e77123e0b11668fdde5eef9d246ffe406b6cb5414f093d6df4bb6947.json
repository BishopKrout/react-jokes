{"ast":null,"code":"var _jsxFileName = \"/home/bishop/School/Exercises/react-jokes-classes/src/JokeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Joke from './Joke';\nimport './JokeList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JokeList = ({\n  numJokesToGet = 5\n}) => {\n  _s();\n  // State for storing jokes and loading status\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Function to fetch jokes from the API\n  const getJokes = async () => {\n    try {\n      let jokes = [];\n      let seenJokes = new Set();\n      while (jokes.length < numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        let {\n          ...joke\n        } = res.data;\n        if (!seenJokes.has(joke.id)) {\n          seenJokes.add(joke.id);\n          jokes.push({\n            ...joke,\n            votes: 0\n          });\n        } else {\n          console.log(\"duplicate found!\");\n        }\n      }\n      setJokes(jokes);\n      setIsLoading(false);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Function to generate new jokes\n  const generateNewJokes = () => {\n    setIsLoading(true);\n    getJokes();\n  };\n\n  // Function to handle votes\n  const vote = (id, delta) => {\n    setJokes(jokes => jokes.map(j => j.id === id ? {\n      ...j,\n      votes: j.votes + delta\n    } : j));\n  };\n\n  // Effect to fetch jokes on component mount\n  useEffect(() => {\n    getJokes();\n  }, []);\n\n  // Sort jokes based on votes\n  let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n\n  // Render loading spinner or jokes list based on loading status\n  return isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-4x fa-spinner fa-spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"JokeList\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: generateNewJokes,\n      children: \"Get New Jokes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), sortedJokes.map(j => /*#__PURE__*/_jsxDEV(Joke, {\n      text: j.joke,\n      id: j.id,\n      votes: j.votes,\n      vote: vote\n    }, j.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this);\n};\n_s(JokeList, \"+iu6xHPOscTV/FNdMPqy/q1M2A4=\");\n_c = JokeList;\nexport default JokeList;\nvar _c;\n$RefreshReg$(_c, \"JokeList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Joke","jsxDEV","_jsxDEV","JokeList","numJokesToGet","_s","jokes","setJokes","isLoading","setIsLoading","getJokes","seenJokes","Set","length","res","get","headers","Accept","joke","data","has","id","add","push","votes","console","log","err","error","generateNewJokes","vote","delta","map","j","sortedJokes","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","_c","$RefreshReg$"],"sources":["/home/bishop/School/Exercises/react-jokes-classes/src/JokeList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Joke from './Joke';\nimport './JokeList.css';\n\nconst JokeList = ({ numJokesToGet = 5 }) => {\n  // State for storing jokes and loading status\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Function to fetch jokes from the API\n  const getJokes = async () => {\n    try {\n      let jokes = [];\n      let seenJokes = new Set();\n\n      while (jokes.length < numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: { Accept: \"application/json\" }\n        });\n        let { ...joke } = res.data;\n\n        if (!seenJokes.has(joke.id)) {\n          seenJokes.add(joke.id);\n          jokes.push({ ...joke, votes: 0 });\n        } else {\n          console.log(\"duplicate found!\");\n        }\n      }\n\n      setJokes(jokes);\n      setIsLoading(false);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Function to generate new jokes\n  const generateNewJokes = () => {\n    setIsLoading(true);\n    getJokes();\n  };\n\n  // Function to handle votes\n  const vote = (id, delta) => {\n    setJokes(jokes => (\n      jokes.map(j =>\n        j.id === id ? { ...j, votes: j.votes + delta } : j\n      )\n    ));\n  };\n\n  // Effect to fetch jokes on component mount\n  useEffect(() => {\n    getJokes();\n  }, []);\n\n  // Sort jokes based on votes\n  let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n\n  // Render loading spinner or jokes list based on loading status\n  return (\n    isLoading ? (\n      <div className=\"loading\">\n        <i className=\"fas fa-4x fa-spinner fa-spin\" />\n      </div>\n    ) : (\n      <div className=\"JokeList\">\n        <button\n          className=\"JokeList-getmore\"\n          onClick={generateNewJokes}\n        >\n          Get New Jokes\n        </button>\n\n        {sortedJokes.map(j => (\n          <Joke\n            text={j.joke}\n            key={j.id}\n            id={j.id}\n            votes={j.votes}\n            vote={vote}\n          />\n        ))}\n      </div>\n    )\n  );\n};\n\nexport default JokeList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}